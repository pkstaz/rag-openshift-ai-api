apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "rag-openshift-ai-api.fullname" . }}
  labels:
    {{- include "rag-openshift-ai-api.labels" . | nindent 4 }}
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.app.replicas | default 2 }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  
  selector:
    matchLabels:
      {{- include "rag-openshift-ai-api.selectorLabels" . | nindent 6 }}
  
  {{- with .Values.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  
  template:
    metadata:
      labels:
        {{- include "rag-openshift-ai-api.selectorLabels" . | nindent 8 }}
      {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podTemplateAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- range .Values.imagePullSecrets }}
        - name: {{ .name }}
        {{- end }}
      {{- end }}
      
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "rag-openshift-ai-api.serviceAccountName" . }}
      {{- end }}
      
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      
      {{- with .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ . }}
      {{- end }}
      
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      {{- if .Values.initContainers }}
      initContainers:
        {{- range .Values.initContainers }}
        - name: {{ .name }}
          image: {{ .image }}
          {{- if .command }}
          command:
            {{- toYaml .command | nindent 12 }}
          {{- end }}
          {{- if .args }}
          args:
            {{- toYaml .args | nindent 12 }}
          {{- end }}
          {{- if .env }}
          env:
            {{- toYaml .env | nindent 12 }}
          {{- end }}
          {{- if .volumeMounts }}
          volumeMounts:
            {{- toYaml .volumeMounts | nindent 12 }}
          {{- end }}
          {{- if .resources }}
          resources:
            {{- toYaml .resources | nindent 12 }}
          {{- end }}
        {{- end }}
      {{- end }}
      
      {{- if .Values.volumes }}
      volumes:
        {{- toYaml .Values.volumes | nindent 8 }}
      {{- end }}
      
      {{- if .Values.configMaps.appConfig.enabled }}
      volumes:
        - name: app-config
          configMap:
            name: {{ include "rag-openshift-ai-api.fullname" . }}-config
      {{- end }}
      
      {{- if .Values.secrets.elasticsearch.enabled }}
      volumes:
        - name: elasticsearch-secrets
          secret:
            secretName: {{ .Values.secrets.elasticsearch.secretName }}
      {{- end }}
      
      {{- if .Values.secrets.vllm.enabled }}
      volumes:
        - name: vllm-secrets
          secret:
            secretName: {{ .Values.secrets.vllm.secretName }}
      {{- end }}
      
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        
        ports:
        - name: http
          containerPort: {{ .Values.app.port }}
          protocol: TCP
        
        {{- with .Values.security }}
        securityContext:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        
        {{- if .Values.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        
        livenessProbe:
          httpGet:
            path: /health
            port: {{ .Values.app.port }}
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          httpGet:
            path: /ready
            port: {{ .Values.app.port }}
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        
        env:
        # API Configuration
        - name: API_HOST
          value: "0.0.0.0"
        - name: API_PORT
          value: {{ .Values.app.port | quote }}
        - name: API_DEBUG
          value: {{ .Values.api.debug | quote }}
        - name: API_LOG_LEVEL
          value: {{ .Values.api.logLevel | quote }}
        - name: API_CORS_ORIGINS
          value: {{ .Values.api.corsOrigins | join "," | quote }}
        - name: API_CORS_METHODS
          value: {{ .Values.api.corsMethods | join "," | quote }}
        
        # Elasticsearch Configuration
        - name: ES_URL
          value: {{ .Values.elasticsearch.url | quote }}
        - name: ES_INDEX_NAME
          value: {{ .Values.elasticsearch.indexName | quote }}
        - name: ES_USERNAME
          value: {{ .Values.elasticsearch.username | quote }}
        - name: ES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "rag-openshift-ai-api.fullname" . }}-secrets
              key: es-password
        - name: ES_TIMEOUT
          value: {{ .Values.elasticsearch.timeout | quote }}
        - name: ES_VECTOR_DIMENSION
          value: {{ .Values.elasticsearch.vectorDimension | quote }}
        
        # vLLM Configuration
        - name: VLLM_URL
          value: {{ .Values.vllm.endpoint | quote }}
        - name: VLLM_MODEL_NAME
          value: {{ .Values.vllm.defaultModel | quote }}
        - name: VLLM_TIMEOUT
          value: {{ .Values.vllm.timeout | quote }}
        - name: VLLM_TEMPERATURE
          value: {{ .Values.vllm.temperature | quote }}
        - name: VLLM_MAX_TOKENS
          value: {{ .Values.vllm.maxTokens | quote }}
        
        # Embedding Configuration
        - name: EMBEDDING_MODEL_NAME
          value: {{ .Values.embedding.modelName | quote }}
        - name: EMBEDDING_DEVICE
          value: {{ .Values.embedding.device | quote }}
        - name: EMBEDDING_BATCH_SIZE
          value: {{ .Values.embedding.batchSize | quote }}
        
        # RAG Configuration
        - name: RAG_TOP_K
          value: {{ .Values.rag.topK | quote }}
        - name: RAG_SIMILARITY_THRESHOLD
          value: {{ .Values.rag.similarityThreshold | quote }}
        - name: RAG_SEARCH_TYPE
          value: {{ .Values.rag.searchType | quote }}
        - name: RAG_CHUNK_SIZE
          value: {{ .Values.rag.chunkSize | quote }}
        - name: RAG_CHUNK_OVERLAP
          value: {{ .Values.rag.chunkOverlap | quote }}
        
        # Application Configuration
        - name: ENV_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: {{ include "rag-openshift-ai-api.fullname" . }}-secrets
              key: secret-key
        - name: ENV_METRICS_ENABLED
          value: {{ .Values.monitoring.enabled | quote }}
        
        # Pod Information
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        
        # Service Information
        - name: SERVICE_NAME
          value: {{ include "rag-openshift-ai-api.fullname" . }}
        
        {{- if .Values.env }}
        {{- toYaml .Values.env | nindent 8 }}
        {{- end }}
        
        {{- if .Values.volumeMounts }}
        volumeMounts:
          {{- toYaml .Values.volumeMounts | nindent 10 }}
        {{- end }}
        
        {{- if .Values.configMaps.appConfig.enabled }}
        volumeMounts:
          - name: app-config
            mountPath: /app/config
            readOnly: true
        {{- end }}
        
        {{- if .Values.secrets.elasticsearch.enabled }}
        volumeMounts:
          - name: elasticsearch-secrets
            mountPath: /app/secrets/elasticsearch
            readOnly: true
        {{- end }}
        
        {{- if .Values.secrets.vllm.enabled }}
        volumeMounts:
          - name: vllm-secrets
            mountPath: /app/secrets/vllm
            readOnly: true
        {{- end }}
        
        {{- if .Values.logging.fluentd.enabled }}
        volumeMounts:
          - name: varlog
            mountPath: /var/log
        {{- end }}
      
      {{- if .Values.sidecarContainers }}
      containers:
        {{- range .Values.sidecarContainers }}
        - name: {{ .name }}
          image: {{ .image }}
          {{- if .ports }}
          ports:
            {{- toYaml .ports | nindent 12 }}
          {{- end }}
          {{- if .env }}
          env:
            {{- toYaml .env | nindent 12 }}
          {{- end }}
          {{- if .volumeMounts }}
          volumeMounts:
            {{- toYaml .volumeMounts | nindent 12 }}
          {{- end }}
          {{- if .resources }}
          resources:
            {{- toYaml .resources | nindent 12 }}
          {{- end }}
        {{- end }}
      {{- end }}
      
      {{- if .Values.logging.fluentd.enabled }}
      volumes:
        - name: varlog
          emptyDir: {}
      {{- end }} 